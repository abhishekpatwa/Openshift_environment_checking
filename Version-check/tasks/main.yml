---

# tasks file for Version-check

- name: Check Version
  shell: '"{{item}}" --version'
  with_items:
        - "{{component_name}}"
  register: component_version

- name: Check Python Version
  set_fact:
    python_fact: true
  when:
      - component_version.results[0].item  == "{{component_name[0]}}"
      - component_version.results[0].stderr == "{{python_version}}"

- debug:
    msg: "Python is same as expected"
  when:
      - "{{python_fact is defined}}"

- debug:
    msg: "Python is verion is not expected"
  when:
      - "{{python_fact is not defined}}"


- name: Check docker Version
  set_fact:
    docker_fact: true
  when:
      - component_version.results[1].item  == "{{component_name[1]}}"
      - component_version.results[1].stdout == "{{docker_version}}"

- debug:
    msg: "docker is same as expected"
  when:
      - "{{docker_fact is defined}}"

- debug:
    msg: "docker is verion is not expected"
  when:
      - "{{docker_fact is not defined}}"

- name: Check ansible Version
  set_fact:
    ansible_fact: true
  when:
      - component_version.results[2].item  == "{{component_name[2]}}"
      - component_version.results[2].stdout.split('\n')[0] == "{{ansible}}"

- debug:
    msg: "ansible is same as expected"
  when:
      - "{{ansible_fact is defined}}"

- debug:
    msg: "ansible is verion is not expected"
  when:
      - "{{ansible_fact is not defined}}"

